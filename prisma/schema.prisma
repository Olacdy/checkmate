generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  name          String?
  email         String?   @unique
  emailVerified DateTime?
  image         String?
  accounts      Account[]
  sessions      Session[]
  Schema        Schema[]
}

model Schema {
  id          String            @id @default(cuid())
  name        String
  createdAt   DateTime          @default(now())
  userId      String
  user        User              @relation(fields: [userId], references: [id], onDelete: Cascade)
  schema      Json
  referred    SchemaReferring[] @relation("referrer")
  referring   SchemaReferring[] @relation("referring")
  validations Validation[]

  @@index([userId, id])
}

model SchemaReferring {
  referrer    Schema @relation("referrer", fields: [referrerId], references: [id])
  referrerId  String
  referring   Schema @relation("referring", fields: [referringId], references: [id])
  referringId String

  @@id([referrerId, referringId])
  @@index([referrerId, referringId])
  @@index([referringId, referrerId])
}

model Validation {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  success   Boolean
  schemaId  String
  schema    Schema   @relation(fields: [schemaId], references: [id], onDelete: Cascade)
  input     Json

  @@index([schemaId, id])
}
